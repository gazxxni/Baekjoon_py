name: Move files under auto_upload

on:
  push:
    branches: [ "main" ]

jobs:
  move:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # allow committing with GITHUB_TOKEN

    steps:
      - name: Checkout (with previous commit)
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # get HEAD and its parent so git diff works reliably

      - name: Compute changed files
        id: changed
        shell: bash
        run: |
          set -e

          BEFORE="${{ github.event.before }}"
          ZERO40="0000000000000000000000000000000000000000"

          # Determine diff range robustly (first run / squash cases included)
          if [ -z "$BEFORE" ] || [ "$BEFORE" = "$ZERO40" ]; then
            if git rev-parse HEAD^ >/dev/null 2>&1; then
              DIFF_RANGE="HEAD^ HEAD"
            else
              DIFF_RANGE=""
            fi
          else
            DIFF_RANGE="${BEFORE} ${{ github.sha }}"
          fi

          if [ -n "$DIFF_RANGE" ]; then
            # Only Added/Modified paths; handle renames and merges
            CHANGED=$(git diff --name-status -m -r $DIFF_RANGE | awk '$1=="A"||$1=="M"{print $2}')
          else
            # First commit fallback: include all tracked files
            CHANGED=$(git ls-files)
          fi

          echo "CHANGED<<EOF" >> "$GITHUB_OUTPUT"
          echo "$CHANGED" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Move into auto_upload/
        if: ${{ steps.changed.outputs.CHANGED != '' }}
        shell: bash
        run: |
          set -e
          moved=false

          while IFS= read -r f; do
            [ -z "$f" ] && continue

            # ðŸ”’ Safety filters:
            # - already under auto_upload -> skip
            # - workflow/config dirs -> skip (never move workflows themselves)
            case "$f" in
              auto_upload/*|.github/*|.git/*)
                continue
                ;;
            esac

            # Skip directories (only move files)
            if [ -d "$f" ]; then
              continue
            fi

            # Preserve subpath under auto_upload/
            mkdir -p "auto_upload/$(dirname "$f")"
            git mv -f -- "$f" "auto_upload/$f" || true
            moved=true
          done <<< "${{ steps.changed.outputs.CHANGED }}"

          if [ "$moved" = true ]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git commit -m "chore: move files under auto_upload/"
            git push
          else
            echo "Nothing to move."
          fi

      - name: Nothing changed
        if: ${{ steps.changed.outputs.CHANGED == '' }}
        run: echo "No changed files to move."
